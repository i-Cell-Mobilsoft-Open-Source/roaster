<xs:schema xmlns="http://domain.dto.zephyr.roaster.icellmobilsoft.hu/test-execution"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://domain.dto.zephyr.roaster.icellmobilsoft.hu/test-execution"
           elementFormDefault="qualified">

    <xs:complexType name="TestScriptResultType">
        <xs:sequence>
            <xs:element name="statusName" type="xs:string"/>
            <xs:element name="actualEndDate" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="actualResult" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CustomFieldsType">
        <xs:sequence>
            <!--Az xsd típus miatt lett berakva egy element. Szerencsére ezt a blokkot üresen kapjuk.-->
            <xs:element name="Tester" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="InlineType">
        <xs:sequence>
            <xs:element name="description" type="xs:string" minOccurs="0"/>
            <xs:element name="testData" type="xs:string" minOccurs="0"/>
            <xs:element name="expectedResult" type="xs:string" minOccurs="0"/>
            <xs:element name="customFields" type="CustomFieldsType" minOccurs="0"/>
            <xs:element name="reflectRef" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TestCaseType">
        <xs:sequence>
            <xs:element name="self" type="InlineType" minOccurs="0"/>
            <xs:element name="testCaseKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ValueType">
        <xs:sequence>
            <xs:element name="inline" type="InlineType" minOccurs="0"/>
            <xs:element name="testCase" type="TestCaseType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="Execution">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="projectKey" type="xs:string"/>
                <xs:element name="testCaseKey" type="xs:string"/>
                <xs:element name="testCycleKey" type="xs:string"/>
                <xs:element name="statusName" type="xs:string"/>
                <xs:element name="testScriptResults" type="TestScriptResultType" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="environmentName" type="xs:string" minOccurs="0"/>
                <xs:element name="actualEndDate" type="xs:dateTime" minOccurs="0"/>
                <xs:element name="executionTime" type="xs:long" minOccurs="0"/>
                <xs:element name="executedById" type="xs:string" minOccurs="0"/>
                <xs:element name="assignedToId" type="xs:string" minOccurs="0"/>
                <xs:element name="comment" type="xs:string" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="TestSteps">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="next" type="xs:string" minOccurs="0"/>
                <xs:element name="startAt" type="xs:integer"/>
                <xs:element name="maxResults" type="xs:integer"/>
                <xs:element name="total" type="xs:integer" minOccurs="0"/>
                <xs:element name="isLast" type="xs:boolean" minOccurs="0"/>
                <xs:element name="values" type="ValueType" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>